services:
  postgres:
    image: postgres:16
    container_name: shopease_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      POSTGRES_DB: ${POSTGRES_DB:-shopease}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d
      - ./postgres/data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-admin} -d ${POSTGRES_DB:-shopease}",
        ]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - backend

  mongo:
    image: mongo:7
    container_name: shopease_mongo
    command: --bind_ip_all
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/init:/docker-entrypoint-initdb.d
      - ./mongo/data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4:8
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_LISTEN_PORT: 80
      PGADMIN_CONFIG_REQUEST_TIMEOUT: 300
    ports:
      - "8081:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - backend
    restart: unless-stopped

  mongo-express:
    image: mongo-express:latest
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017
    ports:
      - "8082:8081"
    depends_on:
      - mongo
    networks:
      - backend

  api:
    build: ./api
    container_name: shopease_api
    env_file: .env
    ports:
      - "${API_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  pgadmin-data:
